@page "/s/{token}"
@attribute [AllowAnonymous]
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using ScioBlazor.Data
@inject UserManager<ApplicationUser> UserManager
@inject ApplicationDbContext Db
@inject NavigationManager Nav

<PageTitle>Sjednat schůzku</PageTitle>

@if (state == PageState.Loading)
{
    <p>Načítám...</p>
}
else if (state == PageState.NotFound)
{
    <h1>Odkaz nebyl nalezen</h1>
}
else if (state == PageState.RedirectOwner)
{
    <p>Přesměrování...</p>
}
else if (owner is not null)
{
    <h1>@HeaderText()</h1>
    <h2>Počet schůzek tento měsíc: @monthlyCount</h2>
}

@code {
    private enum PageState { Loading, Ok, NotFound, RedirectOwner }

    private PageState state = PageState.Loading;
    private ApplicationUser? owner;
    private int monthlyCount;

    [Parameter]
    public string? token { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrWhiteSpace(token)) { state = PageState.NotFound; return; }

        var link = await Db.ShareLinks.FirstOrDefaultAsync(x => x.Token == token);
        if (link is null) { state = PageState.NotFound; return; }

        owner = await Db.Users.FirstOrDefaultAsync(u => u.Id == link.OwnerId);
        if (owner is null) { state = PageState.NotFound; return; }

        var authState = await AuthenticationStateTask;
        var currentUser = await UserManager.GetUserAsync(authState.User);
        if (currentUser?.Id == owner.Id)
        {
            state = PageState.RedirectOwner;
            Nav.NavigateTo("/calendar", true);
            return;
        }

        var now = DateTime.UtcNow;
        var monthStart = new DateTime(now.Year, now.Month, 1, 0, 0, 0, DateTimeKind.Utc);
        var nextMonth = monthStart.AddMonths(1);
        monthlyCount = await Db.Meetings
            .Where(m => m.OwnerId == owner.Id && m.StartUtc >= monthStart && m.StartUtc < nextMonth)
            .CountAsync();

        state = PageState.Ok;
    }

    private string HeaderText()
    {
        var display = owner?.UserName ?? "uživatel";
        string first = display;
        string lastInitial = string.Empty;
        var parts = display.Split(' ', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);
        if (parts.Length >= 2)
        {
            first = parts[0];
            lastInitial = $" {parts[^1][0].ToString().ToUpperInvariant()}.";
        }
        return $"Sjednat schůzku s uživatelem {first}{lastInitial}";
    }
}
